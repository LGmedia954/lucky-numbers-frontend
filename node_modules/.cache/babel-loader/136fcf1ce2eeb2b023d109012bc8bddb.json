{"ast":null,"code":"var _jsxFileName = \"/Users/lesliegonzalez/Development/code/lucky-numbers-frontend/src/components/UserForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { addUser } from '../actions/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class UserForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      email: '',\n      username: ''\n    };\n\n    this.handleOnNameChange = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.handleOnEmailChange = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      const user = { ...this.state,\n        id: uuidv4()\n      };\n      this.props.addUser(user);\n      console.log(uuidv4()); // clear form\n\n      this.setState({\n        email: '',\n        username: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewable\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"SIGN IN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"ui small form\",\n        onSubmit: event => this.handleOnSubmit(event),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"ui small input\",\n            type: \"text\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"Email\",\n            value: this.state.email,\n            onChange: event => this.handleOnNameChange(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"ui small input\",\n            type: \"text\",\n            name: \"username\",\n            id: \"username\",\n            placeholder: \"Username\",\n            value: this.state.username,\n            onChange: event => this.handleOnEmailChange(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"ui inverted yellow button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;\nexport default connect(null, {\n  addUser\n})(UserForm); // handleOnSubmit = event => {\n//   event.preventDefault();\n//   this.props.addUser(this.state);\n//   this.setState({\n//     email: '',\n//     username: ''\n//   });\n// }\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     addUser: (user) => {\n//       dispatch(addUser(user))\n// let newUser = { ...user };\n// newUser.ids = newUser.ids.split(',');\n// const newArr = this.state.users.concat(newUser);\n// this.setState({\n//   users: newArr,\n// });\n//     }\n//   }\n// };\n// export default connect(null, mapDispatchToProps)(UserForm);\n// Alternative form:\n// export default connect(null, { addUser })(UserForm);","map":{"version":3,"sources":["/Users/lesliegonzalez/Development/code/lucky-numbers-frontend/src/components/UserForm.js"],"names":["React","Component","connect","v4","uuidv4","addUser","UserForm","state","email","username","handleOnNameChange","event","setState","target","value","handleOnEmailChange","handleOnSubmit","preventDefault","user","id","props","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { addUser } from '../actions/users';\n\nexport class UserForm extends Component {\n\n  state = {\n    email: '',\n    username: ''\n  }\n\n  handleOnNameChange = event => {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handleOnEmailChange = event => {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  handleOnSubmit = event => {\n    event.preventDefault();\n    const user = {...this.state, id: uuidv4() };\n    this.props.addUser(user);\n    console.log(uuidv4());\n    // clear form\n    this.setState({\n      email: '',\n      username: ''\n    });\n  }\n\n  render() {\n    return(\n      <div className=\"viewable\">\n      <h2>SIGN IN</h2>\n      <form className=\"ui small form\" onSubmit={(event) => this.handleOnSubmit(event)}>\n        <p>\n          <input className=\"ui small input\"\n            type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\"\n            value={this.state.email}\n            onChange={(event) => this.handleOnNameChange(event)}\n             />\n        </p>\n        <p>\n          <input className=\"ui small input\"\n            type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\"\n            value={this.state.username}\n            onChange={(event) => this.handleOnEmailChange(event)}\n            />      \n        </p>\n        <input type=\"submit\" className=\"ui inverted yellow button\" />\n       </form>\n      </div>\n    );\n  }\n};\n\nexport default connect(null, { addUser })(UserForm);\n\n\n\n\n\n// handleOnSubmit = event => {\n//   event.preventDefault();\n//   this.props.addUser(this.state);\n//   this.setState({\n//     email: '',\n//     username: ''\n//   });\n// }\n\n\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     addUser: (user) => {\n//       dispatch(addUser(user))\n      \n      // let newUser = { ...user };\n      // newUser.ids = newUser.ids.split(',');\n      // const newArr = this.state.users.concat(newUser);\n      \n      // this.setState({\n      //   users: newArr,\n      // });\n//     }\n//   }\n// };\n\n// export default connect(null, mapDispatchToProps)(UserForm);\n\n// Alternative form:\n// export default connect(null, { addUser })(UserForm);"]},"metadata":{},"sourceType":"module"}