{"ast":null,"code":"function locateUser() {\n  users.length[-1];\n}\n\n;\nexport const getUsers = () => {\n  return dispatch => {\n    dispatch({\n      type: \"LOADING\"\n    });\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json()).then(users => {\n      console.log(users);\n      dispatch({\n        type: \"SET_USERS\",\n        users\n      });\n    });\n  };\n};\nexport const addUser = user => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(resp => resp.json()).then(user => {\n      dispatch({\n        type: \"ADD_USER\",\n        user\n      });\n      dispatch(getUsers());\n      localStorage.setItem('id', locateUser());\n    });\n  };\n};\nexport const findUser = id => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/users/${id}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: id\n      })\n    }).then(resp => resp.json()).then(user => {\n      console.log(user);\n      dispatch({\n        type: \"FIND_USER\",\n        user\n      });\n    });\n  };\n}; // try {\n//   findUser();\n// } catch (error) {\n//   console.error(error);\n// }\n// localStorage.setItem('id', JSON.stringify(user));","map":{"version":3,"sources":["/Users/lesliegonzalez/Development/code/lucky-numbers-frontend/src/actions/users.js"],"names":["locateUser","users","length","getUsers","dispatch","type","fetch","method","headers","Accept","then","resp","json","console","log","addUser","user","body","JSON","stringify","localStorage","setItem","findUser","id"],"mappings":"AAAA,SAASA,UAAT,GAAsB;AACpBC,EAAAA,KAAK,CAACC,MAAN,CAAa,CAAC,CAAd;AACD;;AAAA;AAGD,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,KADkC;AAE1CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT;AAFiC,KAAvC,CAAL,CAOGC,IAPH,CAOSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAPlB,EAQGF,IARH,CAQST,KAAD,IAAW;AACfY,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACAG,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBJ,QAAAA;AAArB,OAAD,CAAR;AACD,KAXH;AAYD,GAdD;AAeD,CAhBM;AAkBP,OAAO,MAAMc,OAAO,GAAIC,IAAD,IAAU;AAC/B,SAAQZ,QAAD,IAAc;AACnBE,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFiC;AAM1CQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEH,QAAAA;AAAF,OAAf;AANoC,KAAvC,CAAL,CAQGN,IARH,CAQSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EARlB,EASGF,IATH,CASSM,IAAD,IAAU;AACdZ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,UAAR;AAAoBW,QAAAA;AAApB,OAAD,CAAR;AACAZ,MAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACAiB,MAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BrB,UAAU,EAArC;AACD,KAbH;AAcD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMsB,QAAQ,GAAIC,EAAD,IAAQ;AAC9B,SAAQnB,QAAD,IAAc;AACnBE,IAAAA,KAAK,CAAE,sCAAqCiB,EAAG,EAA1C,EAA6C;AAChDhB,MAAAA,MAAM,EAAE,KADwC;AAEhDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFuC;AAMhDQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEH,QAAAA,IAAI,EAAEO;AAAR,OAAf;AAN0C,KAA7C,CAAL,CAQGb,IARH,CAQSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EARlB,EASGF,IATH,CASSM,IAAD,IAAU;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAZ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBW,QAAAA;AAArB,OAAD,CAAR;AACD,KAZH;AAaD,GAdD;AAeD,CAhBM,C,CAoBP;AACA;AACA;AACA;AACA;AAIA","sourcesContent":["function locateUser() {\n  users.length[-1]\n};\n\n\nexport const getUsers = () => {\n  return (dispatch) => {\n    dispatch({ type: \"LOADING\" });\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((users) => {\n        console.log(users)\n        dispatch({ type: \"SET_USERS\", users })\n      });\n  };\n};\n\nexport const addUser = (user) => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user }),\n    })\n      .then((resp) => resp.json())\n      .then((user) => {\n        dispatch({ type: \"ADD_USER\", user });\n        dispatch(getUsers());\n        localStorage.setItem('id', locateUser())\n      });\n  };\n};\n\nexport const findUser = (id) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/api/v1/users/${id}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user: id }),\n    })\n      .then((resp) => resp.json())\n      .then((user) => {\n        console.log(user)\n        dispatch({ type: \"FIND_USER\", user });\n      });\n  };\n};\n\n\n\n// try {\n//   findUser();\n// } catch (error) {\n//   console.error(error);\n// }\n\n\n\n// localStorage.setItem('id', JSON.stringify(user));"]},"metadata":{},"sourceType":"module"}