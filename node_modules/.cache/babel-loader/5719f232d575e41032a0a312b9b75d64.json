{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nconst initialState = {\n  rounds: [],\n  loading: true\n};\n\nconst rounds = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"LOADING\":\n      return { ...state,\n        loading: true\n      };\n\n    case \"SET_ROUNDS\":\n      return { ...state,\n        loading: false,\n        rounds: action.rounds\n      };\n\n    case \"ADD_ROUND\":\n      const taground = {\n        round: action.round,\n        userId: action.round.userId,\n        id: uuidv4()\n      };\n      return { ...state,\n        rounds: [...state.rounds, taground]\n      };\n\n    case \"FIND_USER_ROUND\":\n      // state.lastIndexOf((round) => {return action.round.id === round.id})\n      state.lastIndexOf(round => round.id === action.id);\n      return { ...state,\n        rounds: [...state.rounds, action.round, uuidv4()]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rounds; // const lastRound = rounds[rounds.length - 1]\n// export default function rounds(state = {\n//   rounds: []\n// }, action) {\n//   switch (action.type) {\n//     case 'ADD_ROUND':\n//       return {\n//         ...state,\n//         rounds: [...state.rounds, action.round]\n//       }\n//     default:\n//       return state;\n//   }\n// };\n// case \"ADD_ROUND\":\n//   return {\n//     ...state,\n//     rounds: [...state.rounds, action.round]\n//   };\n// case \"ADD_ROUND\":\n//   state.filter(\n//     user => user.id === action.round.user_id\n//   );\n//   return {\n//     ...state,\n//     rounds: [...state.rounds, action.round]\n//   };\n// case \"FIND_USER_ROUND\":\n//   state.findIndex(round => round.id === action.id);\n//   return {\n//     ...state,\n//     rounds: [...state.rounds, action.round]\n//   };\n// case \"ADD_ROUND\":\n//   return {\n//     ...state,\n//     rounds: [...state.rounds, \n//       {\n//         user: state.userId,\n//         round: action.round\n//       },\n//     ],\n//   }\n// case \"FIND_USER_ROUND\":\n//   // state.lastIndexOf((round) => {return action.round.id === round.id})\n//   idx = state.lastIndexOf(round => round.id === action.id);\n//   return {\n//     ...state,\n//     rounds: [...state.rounds, action.round, uuidv4()]\n//   };","map":{"version":3,"sources":["/Users/lesliegonzalez/Development/code/lucky-numbers-frontend/src/reducers/rounds.js"],"names":["v4","uuidv4","initialState","rounds","loading","state","action","type","taground","round","userId","id","lastIndexOf"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMD,MAAM,GAAG,YAAkC;AAAA,MAAjCE,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAK,YAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELD,QAAAA,OAAO,EAAE,KAFJ;AAGLD,QAAAA,MAAM,EAAEG,MAAM,CAACH;AAHV,OAAP;;AAKF,SAAK,WAAL;AACE,YAAMK,QAAQ,GAAG;AAAEC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAAhB;AAAuBC,QAAAA,MAAM,EAAEJ,MAAM,CAACG,KAAP,CAAaC,MAA5C;AAAoDC,QAAAA,EAAE,EAAEV,MAAM;AAA9D,OAAjB;AACA,aAAO,EACL,GAAGI,KADE;AAELF,QAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAV,EAAkBK,QAAlB;AAFH,OAAP;;AAIF,SAAK,iBAAL;AACE;AACAH,MAAAA,KAAK,CAACO,WAAN,CAAkBH,KAAK,IAAIA,KAAK,CAACE,EAAN,KAAaL,MAAM,CAACK,EAA/C;AACA,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAV,EAAkBG,MAAM,CAACG,KAAzB,EAAgCR,MAAM,EAAtC;AAFH,OAAP;;AAKF;AACE,aAAOI,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,eAAeF,MAAf,C,CAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nconst initialState = {\n  rounds: [],\n  loading: true,\n};\n\nconst rounds = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        ...state,\n        loading: true,\n      };\n    case \"SET_ROUNDS\":\n      return {\n        ...state,\n        loading: false,\n        rounds: action.rounds\n      };\n    case \"ADD_ROUND\":\n      const taground = { round: action.round, userId: action.round.userId, id: uuidv4() };\n      return {\n        ...state,\n        rounds: [...state.rounds, taground]\n      }\n    case \"FIND_USER_ROUND\":\n      // state.lastIndexOf((round) => {return action.round.id === round.id})\n      state.lastIndexOf(round => round.id === action.id);\n      return {\n        ...state,\n        rounds: [...state.rounds, action.round, uuidv4()]\n      };\n\n    default:\n      return state;\n  }\n};\n    \nexport default rounds;\n\n\n\n// const lastRound = rounds[rounds.length - 1]\n\n// export default function rounds(state = {\n//   rounds: []\n// }, action) {\n//   switch (action.type) {\n\n//     case 'ADD_ROUND':\n//       return {\n//         ...state,\n//         rounds: [...state.rounds, action.round]\n//       }\n\n//     default:\n//       return state;\n\n//   }\n// };\n\n\n\n// case \"ADD_ROUND\":\n//   return {\n//     ...state,\n//     rounds: [...state.rounds, action.round]\n//   };\n\n\n\n// case \"ADD_ROUND\":\n//   state.filter(\n//     user => user.id === action.round.user_id\n//   );\n//   return {\n//     ...state,\n//     rounds: [...state.rounds, action.round]\n//   };\n\n\n\n// case \"FIND_USER_ROUND\":\n//   state.findIndex(round => round.id === action.id);\n//   return {\n//     ...state,\n//     rounds: [...state.rounds, action.round]\n//   };\n\n\n\n// case \"ADD_ROUND\":\n//   return {\n//     ...state,\n//     rounds: [...state.rounds, \n//       {\n//         user: state.userId,\n//         round: action.round\n//       },\n//     ],\n//   }\n\n\n\n// case \"FIND_USER_ROUND\":\n//   // state.lastIndexOf((round) => {return action.round.id === round.id})\n//   idx = state.lastIndexOf(round => round.id === action.id);\n//   return {\n//     ...state,\n//     rounds: [...state.rounds, action.round, uuidv4()]\n//   };"]},"metadata":{},"sourceType":"module"}