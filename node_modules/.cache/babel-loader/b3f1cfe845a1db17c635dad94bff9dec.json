{"ast":null,"code":"import { useParams } from \"react-router-dom\";\nconst initialState = {\n  rounds: [],\n  loading: true\n};\n\nconst rounds = function () {\n  var _s = $RefreshSig$();\n\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"LOADING\":\n      return { ...state,\n        loading: true\n      };\n\n    case \"SET_ROUNDS\":\n      return { ...state,\n        loading: false,\n        rounds: action.rounds\n      };\n\n    case \"ADD_ROUND\":\n      return { ...state,\n        rounds: [...state.rounds, {\n          user: state.userId,\n          round: action.round\n        }]\n      };\n    // case \"FIND_USER_ROUND\":\n    //   state.findIndex(round => round.id === action.id);\n    //   return {\n    //     ...state,\n    //     rounds: [...state.rounds, action.round]\n    //   };\n\n    case \"FIND_USER_ROUND\":\n      const Round = match => {\n        _s();\n\n        let {\n          userId\n        } = useParams();\n        state.find(round => round.userId === action.user.id);\n        return { ...state,\n          rounds: [...state.rounds, action.round]\n        };\n      };\n\n    default:\n      return state;\n  }\n\n  _s(Round, \"r0rqsLfWJTH7w5cXk9h+Af0W8oI=\", false, function () {\n    return [useParams];\n  });\n};\n\nexport default rounds; // export default function rounds(state = {\n//   rounds: []\n// }, action) {\n//   switch (action.type) {\n//     case 'ADD_ROUND':\n//       return {\n//         ...state,\n//         rounds: [...state.rounds, action.round]\n//       }\n//     default:\n//       return state;\n//   }\n// };\n// case \"ADD_ROUND\":\n//   state.filter(\n//     user => user.id === action.round.user_id\n//   );\n//   return {\n//     ...state,\n//     rounds: [...state.rounds, action.round]\n//   };","map":{"version":3,"sources":["/Users/lesliegonzalez/Development/code/lucky-numbers-frontend/src/reducers/rounds.js"],"names":["useParams","initialState","rounds","loading","state","action","type","user","userId","round","Round","match","find","id"],"mappings":"AAAA,SAASA,SAAT,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMD,MAAM,GAAG,YAAkC;AAAA;;AAAA,MAAjCE,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAK,YAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELD,QAAAA,OAAO,EAAE,KAFJ;AAGLD,QAAAA,MAAM,EAAEG,MAAM,CAACH;AAHV,OAAP;;AAKF,SAAK,WAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELF,QAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAV,EACR;AACEK,UAAAA,IAAI,EAAEH,KAAK,CAACI,MADd;AAEEC,UAAAA,KAAK,EAAEJ,MAAM,CAACI;AAFhB,SADQ;AAFH,OAAP;AASF;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAK,iBAAL;AACE,YAAMC,KAAK,GAAKC,KAAF,IAAa;AAAA;;AACzB,YAAI;AAAEH,UAAAA;AAAF,YAAaR,SAAS,EAA1B;AACAI,QAAAA,KAAK,CAACQ,IAAN,CAAWH,KAAK,IAAIA,KAAK,CAACD,MAAN,KAAiBH,MAAM,CAACE,IAAP,CAAYM,EAAjD;AACA,eAAO,EACD,GAAGT,KADF;AAEDF,UAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAV,EAAkBG,MAAM,CAACI,KAAzB;AAFP,SAAP;AAIG,OAPL;;AAUF;AACE,aAAOL,KAAP;AAzCJ;;AAD+C,KA+BrCM,KA/BqC;AAAA,YAgCxBV,SAhCwB;AAAA;AA4ChD,CA5CD;;AA8CA,eAAeE,MAAf,C,CAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useParams } from \"react-router-dom\";\n\nconst initialState = {\n  rounds: [],\n  loading: true,\n};\n\nconst rounds = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        ...state,\n        loading: true,\n      };\n    case \"SET_ROUNDS\":\n      return {\n        ...state,\n        loading: false,\n        rounds: action.rounds\n      };\n    case \"ADD_ROUND\":\n      return {\n        ...state,\n        rounds: [...state.rounds, \n        {\n          user: state.userId,\n          round: action.round\n        },\n      ],\n    }\n    // case \"FIND_USER_ROUND\":\n    //   state.findIndex(round => round.id === action.id);\n    //   return {\n    //     ...state,\n    //     rounds: [...state.rounds, action.round]\n    //   };\n\n    case \"FIND_USER_ROUND\":\n      const Round = ( match ) => {\n        let { userId } = useParams();\n        state.find(round => round.userId === action.user.id);\n        return {\n              ...state,\n              rounds: [...state.rounds, action.round]\n            };\n          }\n\n\n    default:\n      return state;\n  }\n};\n    \nexport default rounds;\n\n\n\n// export default function rounds(state = {\n//   rounds: []\n// }, action) {\n//   switch (action.type) {\n\n//     case 'ADD_ROUND':\n//       return {\n//         ...state,\n//         rounds: [...state.rounds, action.round]\n//       }\n\n//     default:\n//       return state;\n\n//   }\n// };\n\n\n\n// case \"ADD_ROUND\":\n//   state.filter(\n//     user => user.id === action.round.user_id\n//   );\n//   return {\n//     ...state,\n//     rounds: [...state.rounds, action.round]\n//   };\n\n\n"]},"metadata":{},"sourceType":"module"}