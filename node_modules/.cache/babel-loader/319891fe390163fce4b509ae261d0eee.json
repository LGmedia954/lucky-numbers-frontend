{"ast":null,"code":"export const getUsers = () => {\n  return dispatch => {\n    dispatch({\n      type: \"LOADING\"\n    });\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json()).then(users => {\n      console.log(users);\n      dispatch({\n        type: \"SET_USERS\",\n        users\n      });\n    });\n  };\n}; // export const addUser = (user) => {\n//   return (dispatch) => {\n//     fetch(\"http://localhost:3000/api/v1/users\", {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ user }),\n//     })\n//       .then((resp) => resp.json())\n//       .then((user) => {\n//         localStorage.setItem('id', JSON.stringify(user));\n//         dispatch({ type: \"ADD_USER\", user });\n//         dispatch(getUsers());\n//       });\n//   };\n// };\n\nexport const addUser = user => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: {\n          id: user.id,\n          email: user.email,\n          username: user.username\n        }\n      })\n    }).then(resp => resp.json()).then(user => {\n      localStorage.setItem('id', JSON.stringify(user));\n      dispatch({\n        type: \"ADD_USER\",\n        user\n      });\n      dispatch(getUsers());\n    });\n  };\n};\nexport const findUser = id => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/users/${id}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: id\n      })\n    }).then(resp => resp.json()).then(user => {\n      dispatch({\n        type: \"FIND_USER\",\n        user\n      });\n      console.log(user);\n    });\n  };\n}; // trying to grab user details\n\nexport const fetchUserDetails = props => {\n  return dispatch => {\n    dispatch({\n      type: \"LOADING\"\n    });\n    return fetch(`http://localhost:3000/api/users/${props.user.id}`).then(resp => resp.json()).then(user => dispatch({\n      type: 'FETCH_USER_DETAILS',\n      user: user\n    }));\n  };\n}; // example for above\n// componentDidMount() {\n//   this.props.actions.fetchUserDetails(this.props)\n// }\n//   render() {\n// const userDetails = this.props.userDetails\n// This detected ids\n// if(JSON.stringify(users).indexOf(\"id\") > -1 ) {\n//   console.log(\"Id Found\");\n// }\n// else{\n//   console.log(\"Id not Found\");\n// }","map":{"version":3,"sources":["/Users/lesliegonzalez/Development/code/lucky-numbers-frontend/src/actions/users.js"],"names":["getUsers","dispatch","type","fetch","method","headers","Accept","then","resp","json","users","console","log","addUser","user","body","JSON","stringify","id","email","username","localStorage","setItem","findUser","fetchUserDetails","props"],"mappings":"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","sourcesContent":["export const getUsers = () => {\n  return (dispatch) => {\n    dispatch({ type: \"LOADING\" });\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((users) => {\n        console.log(users)\n        dispatch({ type: \"SET_USERS\", users })\n      });\n  };\n};\n\n// export const addUser = (user) => {\n//   return (dispatch) => {\n//     fetch(\"http://localhost:3000/api/v1/users\", {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ user }),\n//     })\n//       .then((resp) => resp.json())\n//       .then((user) => {\n//         localStorage.setItem('id', JSON.stringify(user));\n//         dispatch({ type: \"ADD_USER\", user });\n//         dispatch(getUsers());\n//       });\n//   };\n// };\n\nexport const addUser = (user) => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user: {\n        id: user.id,\n        email: user.email,\n        username: user.username\n      }})\n    })\n      .then((resp) => resp.json())\n      .then((user) => {\n        localStorage.setItem('id', JSON.stringify(user));\n        dispatch({ type: \"ADD_USER\", user });\n        dispatch(getUsers());\n      });\n  }\n}\n\nexport const findUser = (id) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/api/v1/users/${id}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user: id }),\n    })\n      .then((resp) => resp.json())\n      .then((user) => {\n        dispatch({ type: \"FIND_USER\", user });\n        console.log(user)\n      });\n  };\n};\n\n// trying to grab user details\nexport const fetchUserDetails = (props) => {\n  return (dispatch) => {\n    dispatch({ type: \"LOADING\" });\n    return fetch(`http://localhost:3000/api/users/${props.user.id}`)\n      .then(resp => resp.json())\n      .then(user => dispatch({\n        type: 'FETCH_USER_DETAILS',\n        user: user\n      }))\n  }\n}\n\n// example for above\n// componentDidMount() {\n//   this.props.actions.fetchUserDetails(this.props)\n// }\n//   render() {\n  // const userDetails = this.props.userDetails\n\n\n\n// This detected ids\n// if(JSON.stringify(users).indexOf(\"id\") > -1 ) {\n//   console.log(\"Id Found\");\n// }\n// else{\n//   console.log(\"Id not Found\");\n// }"]},"metadata":{},"sourceType":"module"}