{"ast":null,"code":"export const getRounds = () => {\n  return dispatch => {\n    dispatch({\n      type: \"LOADING\"\n    });\n    fetch(\"http://localhost:3000/api/v1/rounds\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json()).then(rounds => {\n      console.log(rounds);\n      dispatch({\n        type: \"SET_ROUNDS\",\n        rounds\n      });\n    });\n  };\n};\nexport const addRound = (round, id) => {\n  return dispatch => {\n    // /api/v1/users/:user_id/rounds(.:format)\n    fetch(`http://localhost:3000/api/v1/users/${id}/rounds`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        round\n      })\n    }).then(resp => resp.json()).then(round => {\n      localStorage.setItem('id', round[\"data\"][\"id\"]);\n      debugger;\n      dispatch({\n        type: \"ADD_ROUND\",\n        round\n      });\n      console.log(round);\n      dispatch(getRounds());\n    });\n  };\n};\nexport const showUserRound = (id, round) => {\n  return dispatch => {\n    // /api/v1/users/:user_id/rounds/:id(.:format)\n    fetch(`http://localhost:3000/api/v1/users/${id}/rounds/${round}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json()).then(round => {\n      dispatch({\n        type: \"SHOW_USER_ROUND\",\n        round\n      });\n      console.log(round);\n    });\n  };\n}; // export const deleteUserRound = (id, round) => {\n//   return (dispatch) => {\n//     fetch(`http://localhost:3000/api/v1/users/${id}/rounds/${round}`, {\n//       method: \"DELETE\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//     })\n//       .then((resp) => resp.json())\n//       .then((round) => {\n//         dispatch({ type: \"DELETE_USER_ROUND\", round });\n//       });\n//   };\n// };\n// body: JSON.stringify({\n//   user: id,\n//   round: round\n// })","map":{"version":3,"sources":["/Users/lesliegonzalez/Development/code/lucky-numbers-frontend/src/actions/rounds.js"],"names":["getRounds","dispatch","type","fetch","method","headers","Accept","then","resp","json","rounds","console","log","addRound","round","id","body","JSON","stringify","localStorage","setItem","showUserRound"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,MAAM;AAC7B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAC,IAAAA,KAAK,CAAC,qCAAD,EAAwC;AAC3CC,MAAAA,MAAM,EAAE,KADmC;AAE3CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT;AAFkC,KAAxC,CAAL,CAOCC,IAPD,CAOOC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAPhB,EAQGF,IARH,CAQSG,MAAD,IAAY;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAT,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,YAAR;AAAsBQ,QAAAA;AAAtB,OAAD,CAAR;AACD,KAXH;AAYD,GAdD;AAeD,CAhBM;AAkBP,OAAO,MAAMG,QAAQ,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAe;AACrC,SAAQd,QAAD,IAAc;AACnB;AACAE,IAAAA,KAAK,CAAE,sCAAqCY,EAAG,SAA1C,EAAoD;AACvDX,MAAAA,MAAM,EAAE,MAD+C;AAEvDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAF8C;AAMvDU,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEJ,QAAAA;AAAF,OAAf;AANiD,KAApD,CAAL,CAQGP,IARH,CAQSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EARlB,EASGF,IATH,CASSO,KAAD,IAAW;AACfK,MAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BN,KAAK,CAAC,MAAD,CAAL,CAAc,IAAd,CAA3B;AACA;AACAb,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBY,QAAAA;AAArB,OAAD,CAAR;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAb,MAAAA,QAAQ,CAACD,SAAS,EAAV,CAAR;AACD,KAfH;AAgBD,GAlBD;AAmBD,CApBM;AAsBP,OAAO,MAAMqB,aAAa,GAAG,CAACN,EAAD,EAAKD,KAAL,KAAe;AAC1C,SAAQb,QAAD,IAAc;AACnB;AACAE,IAAAA,KAAK,CAAE,sCAAqCY,EAAG,WAAUD,KAAM,EAA1D,EAA6D;AAChEV,MAAAA,MAAM,EAAE,KADwD;AAEhEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT;AAFuD,KAA7D,CAAL,CAOGC,IAPH,CAOSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAPlB,EAQGF,IARH,CAQSO,KAAD,IAAW;AACfb,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,iBAAR;AAA2BY,QAAAA;AAA3B,OAAD,CAAR;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAXH;AAYD,GAdD;AAeD,CAhBM,C,CAoBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIM;AACA;AACA;AACA","sourcesContent":["export const getRounds = () => {\n  return (dispatch) => {\n    dispatch({ type: \"LOADING\" });\n    fetch(\"http://localhost:3000/api/v1/rounds\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((resp) => resp.json())\n      .then((rounds) => {\n        console.log(rounds)\n        dispatch({ type: \"SET_ROUNDS\", rounds })\n      });\n  };\n};\n\nexport const addRound = (round, id) => {\n  return (dispatch) => {\n    // /api/v1/users/:user_id/rounds(.:format)\n    fetch(`http://localhost:3000/api/v1/users/${id}/rounds`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ round }),\n    })\n      .then((resp) => resp.json())\n      .then((round) => {\n        localStorage.setItem('id', round[\"data\"][\"id\"])\n        debugger\n        dispatch({ type: \"ADD_ROUND\", round });\n        console.log(round)\n        dispatch(getRounds());\n      });\n  };\n};\n\nexport const showUserRound = (id, round) => {\n  return (dispatch) => {\n    // /api/v1/users/:user_id/rounds/:id(.:format)\n    fetch(`http://localhost:3000/api/v1/users/${id}/rounds/${round}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((round) => {     \n        dispatch({ type: \"SHOW_USER_ROUND\", round });\n        console.log(round)\n      });\n  };\n};\n\n\n\n// export const deleteUserRound = (id, round) => {\n//   return (dispatch) => {\n//     fetch(`http://localhost:3000/api/v1/users/${id}/rounds/${round}`, {\n//       method: \"DELETE\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//     })\n//       .then((resp) => resp.json())\n//       .then((round) => {\n//         dispatch({ type: \"DELETE_USER_ROUND\", round });\n//       });\n//   };\n// };\n\n\n\n      // body: JSON.stringify({\n      //   user: id,\n      //   round: round\n      // })"]},"metadata":{},"sourceType":"module"}