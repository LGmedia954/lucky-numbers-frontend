{"ast":null,"code":"if (JSON.stringify(users).indexOf(\"id\") > -1) {\n  console.log(\"Key Found\");\n} else {\n  console.log(\"Key not Found\");\n} // export const getUsers = () => {\n//   return (dispatch) => {\n//     dispatch({ type: \"LOADING\" });\n//     fetch(\"http://localhost:3000/api/v1/users\", {\n//       method: \"GET\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//     })\n//       .then((resp) => resp.json())\n//       .then((users) => {\n//         console.log(users)\n//         dispatch({ type: \"SET_USERS\", users })\n//       });\n//   };\n// };\n\n\nexport const getUsers = () => {\n  return dispatch => {\n    dispatch({\n      type: \"LOADING\"\n    });\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json()).then(users => {\n      console.log(users);\n      dispatch({\n        type: \"SET_USERS\",\n        users\n      });\n    });\n  };\n}; // export const addUser = (user) => {\n//   return (dispatch) => {\n//     fetch(\"http://localhost:3000/api/v1/users\", {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ user }),\n//     })\n//       .then((resp) => resp.json())\n//       .then((user) => {\n//         localStorage.setItem('id', JSON.stringify(user));\n//         dispatch({ type: \"ADD_USER\", user });\n//         dispatch(getUsers());\n//       });\n//   };\n// };\n\nexport const addUser = user => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: {\n          id: user.id,\n          email: user.email,\n          username: user.username\n        }\n      })\n    }.then(resp => resp.json()).then(user => {\n      localStorage.setItem('id', JSON.stringify(user));\n      dispatch({\n        type: \"ADD_USER\",\n        user\n      });\n      dispatch(getUsers());\n    }));\n  };\n};\nexport const findUser = id => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/users/${id}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: id\n      })\n    }).then(resp => resp.json()).then(user => {\n      console.log(user);\n      dispatch({\n        type: \"FIND_USER\",\n        user\n      });\n    });\n  };\n}; // trying to grab user details\n\nexport const fetchUserDetails = props => {\n  return dispatch => {\n    dispatch({\n      type: \"LOADING\"\n    });\n    return fetch(`http://localhost:3000/api/users/${props.userId}`).then(resp => resp.json()).then(user => dispatch({\n      type: 'FETCH_USER_DETAILS',\n      user: user\n    }));\n  };\n}; // for above\n// componentDidMount() {\n//   this.props.actions.fetchUserDetails(this.props)\n// }\n//   render() {\n// const userDetails = this.props.userDetails","map":{"version":3,"sources":["/Users/lesliegonzalez/Development/code/lucky-numbers-frontend/src/actions/users.js"],"names":["JSON","stringify","users","indexOf","console","log","getUsers","dispatch","type","fetch","method","headers","Accept","then","resp","json","addUser","user","body","id","email","username","localStorage","setItem","findUser","fetchUserDetails","props","userId"],"mappings":"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","sourcesContent":["if(JSON.stringify(users).indexOf(\"id\") > -1 ) {\n  console.log(\"Key Found\");\n}\nelse{\n  console.log(\"Key not Found\");\n}\n\n\n// export const getUsers = () => {\n//   return (dispatch) => {\n//     dispatch({ type: \"LOADING\" });\n//     fetch(\"http://localhost:3000/api/v1/users\", {\n//       method: \"GET\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//     })\n//       .then((resp) => resp.json())\n//       .then((users) => {\n//         console.log(users)\n//         dispatch({ type: \"SET_USERS\", users })\n//       });\n//   };\n// };\n\nexport const getUsers = () => {\n  return (dispatch) => {\n    dispatch({ type: \"LOADING\" });\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((users) => {\n        console.log(users)\n        dispatch({ type: \"SET_USERS\", users })\n      });\n  };\n};\n\n// export const addUser = (user) => {\n//   return (dispatch) => {\n//     fetch(\"http://localhost:3000/api/v1/users\", {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ user }),\n//     })\n//       .then((resp) => resp.json())\n//       .then((user) => {\n//         localStorage.setItem('id', JSON.stringify(user));\n//         dispatch({ type: \"ADD_USER\", user });\n//         dispatch(getUsers());\n//       });\n//   };\n// };\n\nexport const addUser = (user) => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({user: {\n        id: user.id,\n        email: user.email,\n        username: user.username\n      }})\n    }\n      .then((resp) => resp.json())\n      .then((user) => {\n        localStorage.setItem('id', JSON.stringify(user));\n        dispatch({ type: \"ADD_USER\", user });\n        dispatch(getUsers());\n      })\n    )\n  }\n}\n\nexport const findUser = (id) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/api/v1/users/${id}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user: id }),\n    })\n      .then((resp) => resp.json())\n      .then((user) => {\n        console.log(user)\n        dispatch({ type: \"FIND_USER\", user });\n      });\n  };\n};\n\n// trying to grab user details\nexport const fetchUserDetails = (props) => {\n  return (dispatch) => {\n    dispatch({ type: \"LOADING\" });\n    return fetch(`http://localhost:3000/api/users/${props.userId}`)\n      .then(resp => resp.json())\n      .then(user => dispatch({\n        type: 'FETCH_USER_DETAILS',\n        user: user\n      }))\n  }\n}\n\n// for above\n// componentDidMount() {\n//   this.props.actions.fetchUserDetails(this.props)\n// }\n//   render() {\n  // const userDetails = this.props.userDetails"]},"metadata":{},"sourceType":"module"}